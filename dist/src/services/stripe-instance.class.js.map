{"version":3,"file":"stripe-instance.class.js","sourceRoot":"","sources":["../../../src/services/stripe-instance.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, PLATFORM_ID } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader, Status } from './api-loader.service';\n\nimport {\n  STRIPE_PUBLISHABLE_KEY,\n  StripeJS,\n  STRIPE_OPTIONS,\n  Options\n} from '../interfaces/stripe';\nimport { Element } from '../interfaces/element';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport {\n  SourceData,\n  SourceResult,\n  isSourceData,\n  SourceParams\n} from '../interfaces/sources';\nimport {\n  CardDataOptions,\n  TokenResult,\n  BankAccount,\n  BankAccountData,\n  PiiData,\n  Pii,\n  isBankAccount,\n  isBankAccountData,\n  isPii,\n  isPiiData\n} from '../interfaces/token';\nimport { StripeServiceInterface } from './stripe-instance.interface';\nimport { PaymentRequestOptions } from '../interfaces/payment-request';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$: BehaviorSubject<StripeJS | undefined> = new BehaviorSubject<\n    StripeJS | undefined\n  >(undefined);\n\n  constructor(\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: Options\n  ) {\n    this.loader\n      .asStream()\n      .filter((status: Status) => status.loaded === true)\n      .first()\n      .map(() => (this.window.getNativeWindow() as any).Stripe)\n      .subscribe((Stripe: any) => {\n        const stripe = this.options\n          ? (Stripe(this.key, this.options) as StripeJS)\n          : (Stripe(this.key) as StripeJS);\n\n        this.stripe$.next(stripe);\n      });\n  }\n\n  public getInstance(): StripeJS | undefined {\n    return this.stripe$.getValue();\n  }\n\n  public elements(options?: ElementsOptions): Observable<Elements> {\n    return this.stripe$\n      .asObservable()\n      .filter(stripe => Boolean(stripe))\n      .map(stripe => (stripe as StripeJS).elements(options))\n      .first();\n  }\n\n  public createToken(\n    a: Element | BankAccount | Pii,\n    b: CardDataOptions | BankAccountData | PiiData | undefined\n  ): Observable<TokenResult> {\n    return this.stripe$\n      .asObservable()\n      .filter(stripe => Boolean(stripe))\n      .switchMap(s => {\n        const stripe = s as StripeJS;\n\n        if (isBankAccount(a) && isBankAccountData(b)) {\n          return Observable.fromPromise(stripe.createToken(a, b));\n        } else if (isPii(a) && isPiiData(b)) {\n          return Observable.fromPromise(stripe.createToken(a, b));\n        } else {\n          return Observable.fromPromise(\n            stripe.createToken(a as Element, b as CardDataOptions | undefined)\n          );\n        }\n      })\n      .first();\n  }\n\n  public createSource(\n    a: Element | SourceData,\n    b?: SourceData | undefined\n  ): Observable<SourceResult> {\n    return this.stripe$\n      .asObservable()\n      .filter(stripe => Boolean(stripe))\n      .switchMap(s => {\n        const stripe = s as StripeJS;\n\n        if (isSourceData(a)) {\n          return Observable.fromPromise(stripe.createSource(a as SourceData));\n        }\n        return Observable.fromPromise(stripe.createSource(a as Element, b));\n      })\n      .first();\n  }\n\n  public retrieveSource(source: SourceParams): Observable<SourceResult> {\n    return this.stripe$\n      .asObservable()\n      .filter(stripe => Boolean(stripe))\n      .switchMap(s => {\n        const stripe = s as StripeJS;\n\n        return Observable.fromPromise(stripe.retrieveSource(source));\n      })\n      .first();\n  }\n\n  public paymentRequest(options: PaymentRequestOptions) {\n    const stripe = this.getInstance();\n    if (stripe) {\n      return stripe.paymentRequest(options);\n    }\n    return undefined;\n  }\n}\n"]}