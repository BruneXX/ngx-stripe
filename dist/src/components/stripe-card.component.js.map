{"version":3,"file":"stripe-card.component.js","sourceRoot":"","sources":["../../../src/components/stripe-card.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nimport {\n  Element as StripeElement,\n  ElementOptions,\n  ElementEventType\n} from '../interfaces/element';\nimport { StripeService } from '../services/stripe.service';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { StripeInstance } from '../services/stripe-instance.class';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `<div class=\"field\" #stripeCard></div>`\n})\nexport class StripeCardComponent implements OnInit {\n  @Output() public card = new EventEmitter<StripeElement>();\n  @Output()\n  public on = new EventEmitter<{ type: ElementEventType; event: any }>();\n\n  @ViewChild('stripeCard') private stripeCard!: ElementRef;\n  private element!: StripeElement;\n  @Input()\n  private set options(optionsIn: ElementOptions) {\n    this.options$.next(optionsIn);\n  }\n  private options$ = new BehaviorSubject<ElementOptions>({});\n  @Input()\n  private set elementsOptions(optionsIn: ElementsOptions) {\n    this.elementsOptions$.next(optionsIn);\n  }\n  private elementsOptions$ = new BehaviorSubject<ElementsOptions>({});\n  @Input()\n  private set stripe(stripeIn: StripeInstance) {\n    this.stripe$.next(stripeIn);\n  }\n  private stripe$ = new BehaviorSubject<StripeInstance | null>(null);\n\n  constructor(private stripeService: StripeService) {}\n\n  public ngOnInit() {\n    const elements$: Observable<Elements> = Observable.combineLatest(\n      this.elementsOptions$.asObservable(),\n      this.stripe$.asObservable()\n    ).switchMap(([options, stripe]) => {\n      if (stripe) {\n        if (Object.keys(options).length > 0) {\n          return stripe.elements(options);\n        }\n        return stripe.elements();\n      } else {\n        if (Object.keys(options).length > 0) {\n          return this.stripeService.elements(options);\n        }\n        return this.stripeService.elements();\n      }\n    });\n    Observable.combineLatest(\n      elements$,\n      this.options$.asObservable().filter(options => Boolean(options))\n    ).subscribe(([elements, options]) => {\n      this.element = elements.create('card', options);\n\n      this.element.on('blur', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'blur'\n        })\n      );\n\n      this.element.on('change', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'change'\n        })\n      );\n\n      this.element.on('click', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'click'\n        })\n      );\n\n      this.element.on('focus', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'focus'\n        })\n      );\n\n      this.element.on('ready', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'ready'\n        })\n      );\n\n      this.element.mount(this.stripeCard.nativeElement);\n\n      this.card.emit(this.element);\n    });\n  }\n\n  public getCard(): StripeElement {\n    return this.element;\n  }\n}\n"]}