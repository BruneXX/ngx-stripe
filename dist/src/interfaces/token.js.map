{"version":3,"file":"token.js","sourceRoot":"","sources":["../../../src/interfaces/token.ts"],"names":[],"mappings":";;;;;;;AAEA,2BAkDC;;;IAjDC,mBAAW;;IACX,uBAAgB;;IAChB,6BAiBE;;IACF,qBAwBE;;IACF,0BAAkB;;IAClB,yBAAkB;;IAClB,qBAA8B;;IAC9B,qBAAc;;;;;AAKhB,qCASC;;;IARC,+BAAc;;IACd,wCAAuB;;IACvB,wCAAuB;;IACvB,uCAAsB;;IACtB,wCAAuB;;IACvB,sCAAqB;;IACrB,0CAAyB;;IACzB,mCAAkB;;;;;AAGpB,iCAGC;;;IAFC,4BAAc;;IACd,4BAAc;;;;;AAKhB,qCAOC;;;IANC,kCAAgB;;IAChB,mCAAiB;;IACjB,yCAAuB;;IACvB,yCAAuB;;IACvB,8CAA4B;;IAC5B,8CAA8C;;;;;AAKhD,6BAEC;;;IADC,qCAA2B;;;;;;AAG7B,MAAM,UAAU,aAAa,CAAC,OAAY;IACxC,OAAO,OAAO,KAAK,cAAc,CAAC;AACpC,CAAC;;;;;AAED,MAAM,UAAU,iBAAiB,CAC/B,eAAoB;IAEpB,OAAO,CACL,SAAS,IAAI,eAAe;QAC5B,UAAU,IAAI,eAAe;QAC7B,gBAAgB,IAAI,eAAe;QACnC,gBAAgB,IAAI,eAAe;QACnC,qBAAqB,IAAI,eAAe;QACxC,qBAAqB,IAAI,eAAe;QACxC,CAAC,eAAe,CAAC,mBAAmB,KAAK,YAAY;YACnD,eAAe,CAAC,mBAAmB,KAAK,SAAS,CAAC,CACrD,CAAC;AACJ,CAAC;;;;;AAED,MAAM,UAAU,KAAK,CAAC,GAAQ;IAC5B,OAAO,GAAG,KAAK,KAAK,CAAC;AACvB,CAAC;;;;;AAED,MAAM,UAAU,SAAS,CAAC,OAAY;IACpC,OAAO,oBAAoB,IAAI,OAAO,CAAC;AACzC,CAAC","sourcesContent":["import { Error } from './utils';\n\nexport interface Token {\n  id: string;\n  object: 'token';\n  bank_account?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'bank_account';\n    account_holder_name: string;\n    account_holder_type: 'individual' | 'company';\n    bank_name: string;\n    last4: string;\n    routing_number: string;\n    status:\n      | 'new'\n      | 'validated'\n      | 'verified'\n      | 'verification_failded'\n      | 'errored';\n  };\n  card?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'card';\n    address_city: string;\n    address_country: string;\n    address_line1: string;\n    address_line1_check: FieldCheck;\n    address_line2: string;\n    address_state: string;\n    address_zip: string;\n    address_zip_check: FieldCheck;\n    brand: string;\n    cvc_check: FieldCheck;\n    dynamic_last4: string;\n    exp_month: number;\n    exp_year: number;\n    funding: 'credit' | 'debit' | 'prepaid' | 'unknown';\n    last4: string;\n    metadata: { [key: string]: any };\n    name: string;\n    tokenization_method: 'apple_pay' | 'android_pay';\n  };\n  client_ip: string;\n  livemode: boolean;\n  type: 'card' | 'bank_account';\n  used: boolean;\n}\n\nexport type FieldCheck = 'pass' | 'fail' | 'unavailable' | 'unchecked';\n\nexport interface CardDataOptions {\n  name?: string;\n  address_line1?: string;\n  address_line2?: string;\n  address_city?: string;\n  address_state?: string;\n  address_zip?: string;\n  address_country?: string;\n  currency?: string;\n}\n\nexport interface TokenResult {\n  token?: Token;\n  error?: Error;\n}\n\nexport type BankAccount = 'bank_account';\n\nexport interface BankAccountData {\n  country: string;\n  currency: string;\n  routing_number: string;\n  account_number: string;\n  account_holder_name: string;\n  account_holder_type: 'individual' | 'company';\n}\n\nexport type Pii = 'pii';\n\nexport interface PiiData {\n  personal_id_number: string;\n}\n\nexport function isBankAccount(account: any): account is BankAccount {\n  return account === 'bank_account';\n}\n\nexport function isBankAccountData(\n  bankAccountData: any\n): bankAccountData is BankAccountData {\n  return (\n    'country' in bankAccountData &&\n    'currency' in bankAccountData &&\n    'routing_number' in bankAccountData &&\n    'account_number' in bankAccountData &&\n    'account_holder_name' in bankAccountData &&\n    'account_holder_type' in bankAccountData &&\n    (bankAccountData.account_holder_type === 'individual' ||\n      bankAccountData.account_holder_type === 'company')\n  );\n}\n\nexport function isPii(pii: any): pii is Pii {\n  return pii === 'pii';\n}\n\nexport function isPiiData(piiData: any): piiData is PiiData {\n  return 'personal_id_number' in piiData;\n}\n"]}